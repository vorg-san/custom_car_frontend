{"version":3,"sources":["web3.js","lottery.js","Main.jsx","App.js","index.js"],"names":["window","ethereum","request","method","web3","Web3","eth","Contract","constant","inputs","name","outputs","type","payable","stateMutability","Main","useState","manager","setManager","players","setPlayers","contractBalance","setContractBalance","myAccount","setMyAccount","myBalance","setMyBalance","value","setValue","message","setMessage","e","a","preventDefault","lottery","methods","enter","send","from","utils","toWei","pickWinner","useEffect","call","getPlayers","getBalance","options","address","getAccounts","account","length","fromWei","onSubmit","onChange","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mqBAEAA,OAAOC,SAASC,QAAQ,CAACC,OAAQ,wBAEjC,IAEeC,EAFF,IAAIC,IAAKL,OAAOC,UCgDd,MAAIG,EAAKE,IAAIC,SAjDhB,CACV,CACEC,UAAU,EACVC,OAAQ,GACRC,KAAM,UACNC,QAAS,CAAC,CAACD,KAAM,GAAIE,KAAM,YAC3BC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,aACNC,QAAS,GACTE,SAAS,EACTC,gBAAiB,aACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,aACNC,QAAS,CAAC,CAACD,KAAM,GAAIE,KAAM,cAC3BC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,GACRC,KAAM,QACNC,QAAS,GACTE,SAAS,EACTC,gBAAiB,UACjBF,KAAM,YAER,CACEJ,UAAU,EACVC,OAAQ,CAAC,CAACC,KAAM,GAAIE,KAAM,YAC1BF,KAAM,UACNC,QAAS,CAAC,CAACD,KAAM,GAAIE,KAAM,YAC3BC,SAAS,EACTC,gBAAiB,OACjBF,KAAM,YAER,CAACH,OAAQ,GAAII,SAAS,EAAOC,gBAAiB,aAAcF,KAAM,gBA/CpD,8C,QC4EDG,EAzEF,WACX,MAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,qBAA9B,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8CJ,qBAA9C,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAAkCN,qBAAlC,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAkCR,qBAAlC,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAA0BV,mBAAS,GAAnC,mBAAOW,EAAP,KAAcC,EAAd,KACA,EAA8BZ,qBAA9B,mBAAOa,EAAP,KAAgBC,EAAhB,KAPiB,4CAyBjB,WAAwBC,GAAxB,SAAAC,EAAA,6DACED,EAAEE,iBAEFH,EAAW,uBAHb,SAKQI,EAAQC,QAAQC,QAAQC,KAAK,CACjCC,KAAMf,EACNI,MAAOvB,EAAKmC,MAAMC,MAAMb,EAAO,WAPnC,OAUEG,EAAW,YAVb,4CAzBiB,kEAsCjB,sBAAAE,EAAA,6DACAF,EAAW,qBADX,SAGQI,EAAQC,QAAQM,aAAaJ,KAAK,CAACC,KAAMf,IAHjD,OAKAO,EAAW,2BALX,4CAtCiB,sBA8CjB,OArCAY,qBAAU,WACP,sBAAC,oCAAAV,EAAA,sEACoBE,EAAQC,QAAQlB,UAAU0B,OAD9C,cACI1B,EADJ,gBAEoBiB,EAAQC,QAAQS,aAAaD,OAFjD,cAEIxB,EAFJ,gBAG4Bf,EAAKE,IAAIuC,WAAWX,EAAQY,QAAQC,SAHhE,cAGI1B,EAHJ,iBAIqBjB,EAAKE,IAAI0C,cAJ9B,eAIIC,EAJJ,OAI6C,GAJ7C,UAKsB7C,EAAKE,IAAIuC,WAAWI,GAL1C,QAKIxB,EALJ,OAOAP,EAAWD,GACXG,EAAWD,GACXG,EAAmBD,GACnBG,EAAayB,GACbvB,EAAaD,GAXb,2CAAD,KAaA,IAwBD,iDACYR,EACV,uBACA,uBAHF,kBAIWE,QAJX,IAIWA,OAJX,EAIWA,EAAS+B,OAJpB,qBAI8C9C,EAAKmC,MAAMY,QAAQ9B,GAAoC,IAAK,SAAU,IAJpH,QAME,uBACA,uBAAM+B,SAtDO,4CAsDb,UACE,gDACA,gCACE,6DACA,uBAAOzB,MAAOA,EAAO0B,SAAU,SAACtB,GAAD,OAAOH,EAASG,EAAEuB,OAAO3B,UAF1D,YAEoF,IACjFvB,EAAKmC,MAAMY,QAAQ1B,GAAwB,IAAK,SAHnD,UAIE,wBAAQb,KAAK,SAAb,yBAGJ,uBACCiB,EACD,uBACA,+CACA,wBAAQ0B,QAnEK,2CAmEb,mBACA,2BC/DSC,EANH,WACV,OACE,cAAC,EAAD,KCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.345d5ea5.chunk.js","sourcesContent":["import Web3 from 'web3'\r\n\r\nwindow.ethereum.request({method: 'eth_requestAccounts'})\r\n\r\nconst web3 = new Web3(window.ethereum)\r\n\r\nexport default web3\r\n","import web3 from './web3'\r\n\r\nconst address = '0x4f9bB26419EC5F0E2d8Fd6550de90546477D1b30'\r\nconst abi = [\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'manager',\r\n    outputs: [{name: '', type: 'address'}],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'pickWinner',\r\n    outputs: [],\r\n    payable: false,\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [],\r\n    name: 'getPlayers',\r\n    outputs: [{name: '', type: 'address[]'}],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: false,\r\n    inputs: [],\r\n    name: 'enter',\r\n    outputs: [],\r\n    payable: true,\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    constant: true,\r\n    inputs: [{name: '', type: 'uint256'}],\r\n    name: 'players',\r\n    outputs: [{name: '', type: 'address'}],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {inputs: [], payable: false, stateMutability: 'nonpayable', type: 'constructor'},\r\n]\r\n\r\nexport default new web3.eth.Contract(abi, address)","import './App.css'\r\nimport React, {useEffect, useState} from 'react'\r\nimport web3 from './web3'\r\nimport lottery from './lottery'\r\n\r\nconst Main = () => {\r\n  const [manager, setManager] = useState()\r\n  const [players, setPlayers] = useState()\r\n  const [contractBalance, setContractBalance] = useState()\r\n  const [myAccount, setMyAccount] = useState()\r\n  const [myBalance, setMyBalance] = useState()\r\n  const [value, setValue] = useState(0)\r\n  const [message, setMessage] = useState()\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      let manager = await lottery.methods.manager().call()\r\n      let players = await lottery.methods.getPlayers().call()\r\n      let contractBalance = await web3.eth.getBalance(lottery.options.address)\r\n      var account = (await web3.eth.getAccounts())[0]\r\n      let myBalance = await web3.eth.getBalance(account)\r\n\r\n      setManager(manager)\r\n      setPlayers(players)\r\n      setContractBalance(contractBalance)\r\n      setMyAccount(account)\r\n      setMyBalance(myBalance)\r\n    })()\r\n  }, [])\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    setMessage('entering lottery...')\r\n\r\n    await lottery.methods.enter().send({\r\n      from: myAccount,\r\n      value: web3.utils.toWei(value, 'ether'),\r\n    })\r\n\r\n    setMessage('entered!')\r\n  }\r\n\r\n  async function pickWinner() {\r\n\t\tsetMessage('picking winner...')\r\n\r\n    await lottery.methods.pickWinner().send({from: myAccount})\r\n\r\n\t\tsetMessage('winner has been picked!')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      Manager: {manager}\r\n      <br />\r\n      <br />\r\n      Players {players?.length} competing to win {web3.utils.fromWei(contractBalance ? contractBalance : '0', 'ether')}{' '}\r\n      ether\r\n      <hr />\r\n      <form onSubmit={onSubmit}>\r\n        <h4>try your luck?</h4>\r\n        <div>\r\n          <label>amount of ether to enter</label>\r\n          <input value={value} onChange={(e) => setValue(e.target.value)}></input> (wallet:{' '}\r\n          {web3.utils.fromWei(myBalance ? myBalance : '0', 'ether')} ether)\r\n          <button type='submit'>Enter</button>\r\n        </div>\r\n      </form>\r\n      <hr />\r\n      {message}\r\n      <hr />\r\n      <h4>Pick a winner</h4>\r\n      <button onClick={pickWinner}>Pick!</button>\r\n      <hr />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import './App.css'\nimport React from 'react'\nimport Main from './Main'\n\nconst App = () => {\n  return (\n    <Main/>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}